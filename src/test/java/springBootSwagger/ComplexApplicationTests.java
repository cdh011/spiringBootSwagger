/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package springBootSwagger;

import static org.junit.jupiter.api.Assertions.assertTrue;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.junit.jupiter.api.Test;
import org.springframework.boot.test.context.SpringBootTest;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.school.util.CommonUtil;
import com.school.util.DateUtil;

@SpringBootTest
class ComplexApplicationTests {
	@Test
	void 시스템_정상_작동_확인() {
		String currentDate = DateUtil.getCurrentDateTime("yyyy");
		
		Integer currentYearInt = Integer.parseInt(currentDate);
		
		assertTrue( 1930 < currentYearInt && 9999 > currentYearInt );
	}
	
	@Test
	void 데이터_파싱_테스트() {

		String jsonStr = "{\"test\":123}";
		
		Map<String, Object> mapObj =  CommonUtil.gson.fromJson(jsonStr, Map.class);
		
		String testValStr = mapObj.get("test").toString();

		int testVal = (int) Double.parseDouble(testValStr);
		
		assertTrue( testVal == 123 );
	}
	
	@Test
	void 데이터_파싱_어레이_테스트() {

		String jsonStr = "[{\"test\":123},{\"test\":124}]";
		
		List<Map<String, Object>> mapObj =  CommonUtil.gson.fromJson(jsonStr, List.class);
		
		String testValStr = mapObj.get(0).get("test").toString();

		int testVal = (int) Double.parseDouble(testValStr);
		
		assertTrue( testVal == 123 );
	}

	
	@Test
	void 데이터_출력_테스트() throws JsonProcessingException {

		Map<String, Object> mapObj = new HashMap<String, Object>();
		
		mapObj.put("test", 123);
		
		ObjectMapper mapper = new ObjectMapper();
		
		String jsonStr = mapper.writerWithDefaultPrettyPrinter().writeValueAsString(mapObj);
		
		assertTrue(jsonStr.length() >= 3);
		
	}

	
	@Test
	void 데이터_출력_어레이_테스트() throws JsonProcessingException {
		List<Map> arrMap = new ArrayList<Map>();
		
		Map<String, Object> mapObjOne = new HashMap<String, Object>();
		Map<String, Object> mapObjTwo = new HashMap<String, Object>();
		
		mapObjOne.put("test", 123);
		mapObjTwo.put("test", 124);
		
		arrMap.add(mapObjOne);
		arrMap.add(mapObjTwo);
		
		ObjectMapper mapper = new ObjectMapper();
		
		String jsonStr = mapper.writerWithDefaultPrettyPrinter().writeValueAsString(arrMap);
		
		assertTrue(jsonStr.length() >= 3);
		
	}
	


}
